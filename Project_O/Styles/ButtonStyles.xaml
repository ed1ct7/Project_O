<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Project_O.Classes">

    <Style x:Key="S_WindowMenuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{Binding BorderColor, Source={x:Static local:Properties.Instance}}"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Width" Value="40"></Setter> 
        <Setter Property="Height" Value="30"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                        BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontSize" Value="14" />
            </Trigger>
        </Style.Triggers>
        
    </Style>

    <Style x:Key="S_WMClose" TargetType="Button" BasedOn="{StaticResource S_WindowMenuButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding ProperRed, Source={x:Static local:Properties.Instance}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="S_WMOther" TargetType="Button" BasedOn="{StaticResource S_WindowMenuButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding ProperBlue, Source={x:Static local:Properties.Instance}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="S_TextButton" TargetType="Button">
        <Setter Property="BorderBrush" Value="{Binding BorderColor, Source={x:Static local:Properties.Instance}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                     BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding ProperBlue, Source={x:Static local:Properties.Instance}}"/>
                <Setter Property="Background" Value="Transparent"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="S_TextButtonRed" TargetType="Button" BasedOn="{StaticResource S_TextButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding ProperRed, Source={x:Static local:Properties.Instance}}"/>
                <Setter Property="Background" Value="Transparent"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="S_MenuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{Binding FG_Control, Source={x:Static local:Properties.Instance}}"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                        Background="{TemplateBinding Background}"
                        CornerRadius="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      TextElement.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding BG_ControlOnHovered, Source={x:Static local:Properties.Instance}}"></Setter>
                            <Setter Property="FontSize" Value="{Binding FontSizeOnHovered, Source={x:Static local:Properties.Instance}}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FFBCBCBC"/>
                            <Setter TargetName="border" Property="BorderBrush" 
                                    Value="{Binding FontSizeOnHovered, Source={x:Static local:Properties.Instance}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S_Auth" TargetType="Button" BasedOn="{StaticResource S_MenuButton}">
        <Setter Property="Background" Value="{Binding FG_Control, Source={x:Static local:Properties.Instance}}"/>
        <Setter Property="Foreground" Value="{Binding BG_Control, Source={x:Static local:Properties.Instance}}"/>
        <Setter Property="FontWeight" Value="Bold"></Setter>
    </Style>
    
    <Style x:Key="S_Lesson" TargetType="Button">
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{Binding FG_Control, Source={x:Static local:Properties.Instance}}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle Name="BackgroundElement" 
                             Fill="Transparent"
                             Margin="0,0,0,0"/>
                        <Rectangle Margin="0,0,0,0" 
                                   Fill="{TemplateBinding BorderBrush}"
                                   Height="1" 
                                   VerticalAlignment="Top"
                                   Width="10000"/>
                        <ContentPresenter 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundElement" Property="Fill" Value="{Binding BG_ControlOnHovered, Source={x:Static local:Properties.Instance}}"/>
                            <Setter Property="FontSize" Value="{Binding FontSizeOnHovered, Source={x:Static local:Properties.Instance}}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundElement" Property="Fill" Value="#FFBCBCBC"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>